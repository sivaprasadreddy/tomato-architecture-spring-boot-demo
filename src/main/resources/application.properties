spring.application.name=bookstore
spring.threads.virtual.enabled=true

logging.level.com.sivalabs=DEBUG
#logging.level.org.jooq.tools.LoggerListener=DEBUG

######## App Configuration  #########
app.product-price-updates-topic=product-price-updates-topic
app.new-orders-topic=new-orders-topic
app.new-orders-job-cron=*/10 * * * * *

app.cors.path-pattern=/api/**
app.cors.allowed-origins=*
app.cors.allowed-methods=*
app.cors.allowed-headers=*

app.openapi.title=BookStore API
app.openapi.description=OpenAPI Docs for BookStore API
app.openapi.version=v1.0.0
app.openapi.contact.name=SivaLabs
app.openapi.contact.email=support@sivalabs.in

######## Compose Configuration  #########
spring.docker.compose.lifecycle-management=start_only

######## Database Configuration  #########
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB_DATABASE:postgres}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD:postgres}
spring.jpa.show-sql=true
spring.jpa.open-in-view=false
#spring.flyway.clean-disabled=false
#spring.flyway.clean-on-validation-error=true

######## Kafka Configuration  #########
KAFKA_BROKER=broker:9092
spring.kafka.bootstrap-servers=${KAFKA_BROKER}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

spring.kafka.consumer.group-id=${spring.application.name}
spring.kafka.consumer.auto-offset-reset=latest
#spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.producer.properties.spring.json.add.type.headers=true
spring.kafka.consumer.properties.spring.json.trusted.packages=*
